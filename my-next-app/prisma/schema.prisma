// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id             String           @id @default(uuid())
  email          String           @unique
  name           String?
  password       String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  accounts       Account[]
  transactions   Transaction[]
  budgets        Budget[]
  investments    Investment[]
  subscriptions  Subscription[]
}

model Account {
  id            String        @id @default(uuid())
  userId        String
  name          String
  type          String        // checking, savings, credit, investment
  balance       Float
  institution   String
  accountNumber String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  user          User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions  Transaction[]
}

model Transaction {
  id          String    @id @default(uuid())
  userId      String
  accountId   String
  amount      Float
  description String
  category    String
  date        DateTime
  isIncome    Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  account     Account   @relation(fields: [accountId], references: [id], onDelete: Cascade)
}

model Budget {
  id          String   @id @default(uuid())
  userId      String
  category    String
  amount      Float
  period      String   // monthly, weekly, yearly
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Investment {
  id          String   @id @default(uuid())
  userId      String
  name        String
  type        String   // stock, bond, crypto, etc.
  amount      Float
  purchaseDate DateTime
  currentValue Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Subscription {
  id          String   @id @default(uuid())
  userId      String
  name        String
  amount      Float
  billingCycle String  // monthly, yearly, etc.
  nextBillingDate DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}